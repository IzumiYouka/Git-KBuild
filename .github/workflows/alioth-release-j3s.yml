name: FD-stk - clang-r547379 release full build

on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE_1:
        description: 'Kernel Tree 1'
        default: 'https://github.com/re-noroi/kernel_sm8250'
        required: true
      KERNEL_TREE_BRANCH_1:
        description: 'Kernel Tree Branch 1'
        default: 'next-main-j3sbattery'
        required: true
      KERNEL_TREE_2:
        description: 'Kernel Tree 2'
        default: 'https://github.com/re-noroi/kernel_sm8250'
        required: true
      KERNEL_TREE_BRANCH_2:
        description: 'Kernel Tree Branch 2'
        default: 'next-susfs-j3sbattery'
        required: true
      KERNEL_TREE_3:
        description: 'Kernel Tree 3'
        default: 'https://github.com/re-noroi/kernel_sm8250'
        required: true
      KERNEL_TREE_BRANCH_3:
        description: 'Kernel Tree Branch 3'
        default: 'no-ksu-j3sbattery'
        required: true
      CODENAME:
        description: 'Phone Codename'
        default: 'alioth'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/re-noroi/anykernel3-test'
        required: false

jobs:
  build:
    strategy:
      matrix:
        kernel: [1, 2, 3]
        type: [original, modified]
    runs-on: ubuntu-latest
    env:
      BUILD_TITLE: ${{ github.event.inputs.BUILD_TITLE || 'FD-j3s - Clang-r547379 release full build (3 Kernel Trees)' }}
      UPLOAD_TO_RELEASE: false

    steps:
      - name: Install Dependencies
        run: sudo apt install flex libncurses6

      - name: Download & Extract Clang
        run: |
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
          mkdir clang
          tar -xf clang.tar.gz -C clang

      - name: Set Kernel Variables
        run: |
          echo "KERNEL_TREE=$(eval echo \${{ github.event.inputs.KERNEL_TREE_${{ matrix.kernel }} }})" >> $GITHUB_ENV
          echo "KERNEL_TREE_BRANCH=$(eval echo \${{ github.event.inputs.KERNEL_TREE_BRANCH_${{ matrix.kernel }} }})" >> $GITHUB_ENV

      - name: Checkout Kernel
        run: |
          git clone --depth=1 $KERNEL_TREE -b $KERNEL_TREE_BRANCH kernel_tree

      - name: Apply Patches
        run: |
          cd kernel_tree
          bash nextpatch.sh

      - name: Apply Modifications (if modified build)
        if: matrix.type == 'modified'
        run: |
          cd kernel_tree
          sed -i -e '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2649600>,/c\/\<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2745600>,/c\/\<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2841600>,/c\/\<2841600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/c\/\<3187200>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-width-dimension = <70>;/qcom,mdss-pan-physical-width-dimension = <700>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-k11a-38-08-0a-dsc-cmd.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-height-dimension = <155>;/qcom,mdss-pan-physical-height-dimension = <1540>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-k11a-38-08-0a-dsc-cmd.dtsi

      - name: Build Kernel
        run: |
          export PATH="$(pwd)/clang/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=ARM64
          export KBUILD_BUILD_USER="renoroi"
          export KBUILD_BUILD_HOST="dreamstate"
          cd kernel_tree
          make O=out vendor/alioth_defconfig
          make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
          cp out/arch/arm64/boot/Image.gz ../Image-${{ matrix.kernel }}-${{ matrix.type }}.gz
          cp out/arch/arm64/boot/dtb.img ../dtb-${{ matrix.kernel }}-${{ matrix.type }}.img || true
          cp out/arch/arm64/boot/dtbo.img ../dtbo-${{ matrix.kernel }}-${{ matrix.type }}.img || true

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-${{ matrix.type }}
          path: |
            Image-${{ matrix.kernel }}-${{ matrix.type }}.gz
            dtb-${{ matrix.kernel }}-${{ matrix.type }}.img
            dtbo-${{ matrix.kernel }}-${{ matrix.type }}.img

  package_anykernel:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Kernel Builds
        uses: actions/download-artifact@v4

      - name: Clone AnyKernel3
        run: git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b ${{ github.event.inputs.CODENAME }} AnyKernel3

      - name: Create Flashable Kernel Packages
        run: |
          zip -r FakeDreamer-j3s-next-${{ github.event.inputs.CODENAME }}-${{ github.run_id }}.zip AnyKernel3
          zip -r FakeDreamer-j3s-susfs-${{ github.event.inputs.CODENAME }}-${{ github.run_id }}.zip AnyKernel3
          zip -r FakeDreamer-j3s-noksu-${{ github.event.inputs.CODENAME }}-${{ github.run_id }}.zip AnyKernel3

      - name: Upload AnyKernel3 Packages
        uses: actions/upload-artifact@v4
        with:
          name: FakeDreamer-Packages
          path: |
            FakeDreamer-j3s-next-${{ github.event.inputs.CODENAME }}-${{ github.run_id }}.zip
            FakeDreamer-j3s-susfs-${{ github.event.inputs.CODENAME }}-${{ github.run_id }}.zip
            FakeDreamer-j3s-noksu-${{ github.event.inputs.CODENAME }}-${{ github.run_id }}.zip
