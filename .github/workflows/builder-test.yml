name: DandaKernel-Alioth-Clang15

on:
  workflow_dispatch:
    inputs:
      CUSTOM_VERSION:
        description: 'Suffix versi kernel (mis. -Oxygen)'
        default: '-Oxygen'
        required: false
      LTO_TYPE:
        description: 'Pilih LTO'
        type: choice
        options: [full_lto, thin_lto]
        default: full_lto

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Install deps
        run: |
          sudo apt update
          sudo apt install -y \
            bc bison flex build-essential zip curl libssl-dev \
            ccache python3 rsync lz4 git unzip wget \
            libelf-dev liblz4-tool dwarves lld llvm clang-tools

      - name: Fetch AOSP clang-r487747 (LLVM 15) via sparse clone
        run: |
          set -e
          git clone --filter=blob:none --sparse \
            https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 \
            aosp-clang
          cd aosp-clang
          git sparse-checkout set clang-r487747
          # kalau mau pin ke commit spesifik, uncomment baris di bawah:
          # git checkout 788f1e86014660a5230ba4e9f52c39d5b393cd2b || true
          cd ..
          mv aosp-clang/clang-r487747 clang
          echo "Using toolchain:"
          ./clang/bin/clang --version || true
          ./clang/bin/ld.lld --version || true

      - name: Clone kernel source (walt)
        run: |
          git clone --depth=1 -b walt https://github.com/Danda420/kernel_xiaomi_sm8250 kernel_tree

      - name: Smart patches (only if needed)
        run: |
          cd kernel_tree
          # stack_pointer.h
          if grep -q 'register unsigned long current_stack_pointer asm ("sp")' arch/arm64/include/asm/stack_pointer.h; then
            sed -i 's/register unsigned long current_stack_pointer asm ("sp");/unsigned long current_stack_pointer; \/\/ patched/g' arch/arm64/include/asm/stack_pointer.h
          fi
          # kgdb.h constraint
          if grep -q '"I" (KGDB_COMPILED_DBG_BRK_IMM)' arch/arm64/include/asm/kgdb.h; then
            sed -i 's/"I" (KGDB_COMPILED_DBG_BRK_IMM)/"r" (KGDB_COMPILED_DBG_BRK_IMM)/g' arch/arm64/include/asm/kgdb.h
          fi
          # vdso gettimeofday (biasanya aman di LLVM15; tetap kondisional)
          if grep -q 'asm("x0")' arch/arm64/include/asm/vdso/gettimeofday.h 2>/dev/null; then
            sed -i 's/asm("x0")/asm("r0")/g; s/asm("x1")/asm("r1")/g; s/asm("x8")/asm("r8")/g' arch/arm64/include/asm/vdso/gettimeofday.h || true
          fi

      - name: Build kernel (alioth_defconfig)
        run: |
          export PATH="$PWD/clang/bin:$PATH"
          export
