name: FD-alioth-new-rebase

on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE_1:
        description: 'Kernel Tree 1'
        default: 'https://github.com/re-noroi/kernel_sm8250'
        required: true
      KERNEL_TREE_BRANCH_1:
        description: 'Kernel Tree Branch 1'
        default: 'freesia'
        required: true
      KERNEL_TREE_BRANCH_2:
        description: 'Kernel Tree Branch 2'
        default: 'freesia'
        required: true
      CODENAME:
        description: 'Phone Codename'
        default: 'alioth'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/re-noroi/anykernel3-test'
        required: false
      CUSTOM_SED:
        description: 'Custom Kernel Version'
        default: '-FakeDreamer'
        required: false
      COMPILER:
        description: 'default=neutron, write aosp for aosp 20 clang'
        default: 'neutron'
        required: false

jobs:
  build:
    strategy:
      matrix:
        kernel: [1, 2]
        type: [original, modified]
    runs-on: ubuntu-latest
    env:
      UPLOAD_TO_RELEASE: false

    steps:
      - name: Install Dependencies
        run: sudo apt install flex libncurses6

      - name: Download & Extract Clang
        run: |
          if [[ "${{ github.event.inputs.COMPILER }}" == "aosp" ]]; then
            wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
            mkdir clang
            tar -xf clang.tar.gz -C clang
          else
            wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
            mkdir clang
            unzstd -d clang.tar.zst
            tar -xf clang.tar -C clang
          fi
          
      - name: Set Kernel Environment Variables
        run: |
          case "${{ matrix.kernel }}" in
            1) echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_1 }}" >> $GITHUB_ENV ;;
            2) echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_2 }}" >> $GITHUB_ENV ;;
          esac
          
      - name: Checkout Kernel via PAT
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git clone --depth=1 \
          --branch "${{ env.KERNEL_TREE_BRANCH }}" \
          https://x-access-token:${GH_PAT}@github.com/re-noroi/kernel_sm8250_fd \
          kernel_tree

      - name: Change different battery type
        if: matrix.kernel == 1
        run: |
          cd kernel_tree
          sed -i -e '/qcom,j3s-batt-profile;/d' arch/arm64/boot/dts/vendor/qcom/alioth-sm8250.dtsi
      
      - name: Kernel Version
        run: |
          cd kernel_tree
          if [[ "${{ github.event.inputs.CUSTOM_SED }}" != "-FakeDreamer" ]]; then
            sed -i -e 's/CONFIG_LOCALVERSION="-FakeDreamer"/CONFIG_LOCALVERSION="${{ github.event.inputs.CUSTOM_SED }}"/' arch/arm64/configs/vendor/alioth_defconfig
          fi
      
      - name: Apply Patches
        if: matrix.kernel
        run: |
          cd kernel_tree
          bash nextpatch.sh
          
      - name: Apply Modifications (if modified build)
        if: matrix.type == 'modified'
        run: |
          cd kernel_tree
          sed -i -e '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2649600>,/c\//<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2745600>,/c\//<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2841600>,/c\//<2841600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/c\//<3187200>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-width-dimension = <70>;/qcom,mdss-pan-physical-width-dimension = <700>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-k11a-38-08-0a-dsc-cmd.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-height-dimension = <155>;/qcom,mdss-pan-physical-height-dimension = <1540>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-k11a-38-08-0a-dsc-cmd.dtsi
      
      - name: Build Kernel
        run: |
          export PATH="$(pwd)/clang/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=ARM64
          export KBUILD_BUILD_USER="renoroi"
          export KBUILD_BUILD_HOST="dreamstate"
          export KBUILD_BUILD_TIMESTAMP="$(TZ=UTC-7 date)"
          cd kernel_tree
          make O=out vendor/alioth_defconfig
          make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
          if [[ "${{ matrix.type }}" == "original" ]]; then
            mv out/arch/arm64/boot/dtbo.img ../alioth-j3s-dtbo-aosp.img
            mv out/arch/arm64/boot/dtb.img ../alioth-normal-dtb
            cp out/arch/arm64/boot/Image.gz ../Image.gz
          else
            mv out/arch/arm64/boot/dtbo.img ../alioth-j3s-dtbo-miui.img
            mv out/arch/arm64/boot/dtb.img ../alioth-effcpu-dtb
          fi

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-${{ matrix.type }}
          path: |
            alioth-j3s-dtbo-aosp.img
            alioth-j3s-dtbo-miui.img
            alioth-normal-dtb
            alioth-effcpu-dtb
            Image.gz

  package_anykernel:
    needs: build
    strategy:
      matrix:
        kernel: [1, 2]
    runs-on: ubuntu-latest

    steps:
      - name: Download Kernel Build Original
        uses: actions/download-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-original
          path: kernel-${{ matrix.kernel }}-original

      - name: Download Kernel Build Modified
        uses: actions/download-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-modified
          path: kernel-${{ matrix.kernel }}-modified

      - name: Clone AnyKernel3
        run: git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b main AnyKernel3-${{ matrix.kernel }}

      - name: Move Kernel Files to AnyKernel3
        run: |
          mv kernel-${{ matrix.kernel }}-original/* AnyKernel3-${{ matrix.kernel }}/
          mv kernel-${{ matrix.kernel }}-modified/* AnyKernel3-${{ matrix.kernel }}/

      - name: Define ZIP Name
        run: |
          COMPILED_DATE=$(date +%Y%m%d)
          if [[ "${{ matrix.kernel }}" == "1" ]]; then
            echo "ZIP_NAME=[FD-stk-][TEST-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV
          else
            echo "ZIP_NAME=[FD-j3s-][TEST-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV
          fi
      
      - name: Upload Flashable Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: |
            AnyKernel3-${{ matrix.kernel }}/
            !AnyKernel3-${{ matrix.kernel }}/.git
            !AnyKernel3-${{ matrix.kernel }}/.github
      
